package com.country;

import com.google.common.io.ByteStreams;
import com.vividsolutions.jts.geom.Point;
import com.vividsolutions.jts.geom.Geometry;
import com.world.Util;
import java.io.IOException;

public class Vanuatu {

  public static boolean test(Point p) {
    if ((p.getX() >= 169.73303199999998 && p.getY() >= -20.254168999999933 && p.getX() <= 169.89413500000012 && p.getY() <= -20.138053999999958) || (p.getX() >= 170.2033080000001 && p.getY() >= -19.560000999999943 && p.getX() <= 170.23522900000012 && p.getY() <= -19.52389099999993) || (p.getX() >= 169.20275900000013 && p.getY() >= -19.658053999999996 && p.getX() <= 169.4982910000001 && p.getY() <= -19.319999999999997) || (p.getX() >= 169.57858299999998 && p.getY() >= -19.276947000000007 && p.getX() <= 169.60052499999995 && p.getY() <= -19.231387999999924) || (p.getX() >= 168.97940099999994 && p.getY() >= -19.0 && p.getX() <= 169.3366390000001 && p.getY() <= -18.61972000000003) || (p.getX() >= 168.14804100000003 && p.getY() >= -17.83000199999998 && p.getX() <= 168.57940700000006 && p.getY() <= -17.531390999999985) || (p.getX() >= 168.11605799999998 && p.getY() >= -16.848887999999988 && p.getX() <= 168.47580000000016 && p.getY() <= -16.57583199999999) || (p.getX() >= 168.20135500000012 && p.getY() >= -16.517222999999944 && p.getX() <= 168.25582900000006 && p.getY() <= -16.429165000000012) || (p.getX() >= 167.91275000000007 && p.getY() >= -16.362220999999977 && p.getX() <= 168.32498199999998 && p.getY() <= -16.086112999999955) || (p.getX() >= 167.14358500000012 && p.getY() >= -16.593334000000027 && p.getX() <= 167.83828700000015 && p.getY() <= -15.873055000000022) || (p.getX() >= 167.0691220000001 && p.getY() >= -15.75611099999992 && p.getX() <= 167.2363590000001 && p.getY() <= -15.623609999999983) || (p.getX() >= 167.23913600000003 && p.getY() >= -15.588332999999976 && p.getX() <= 167.28997800000013 && p.getY() <= -15.543889999999976) || (p.getX() >= 167.11022900000012 && p.getY() >= -15.611388999999916 && p.getX() <= 167.21051000000014 && p.getY() <= -15.529166999999916) || (p.getX() >= 168.11190799999997 && p.getY() >= -15.998333000000002 && p.getX() <= 168.269135 && p.getY() <= -15.492222000000028) || (p.getX() >= 167.66830400000012 && p.getY() >= -15.490832999999952 && p.getX() <= 168.00470000000007 && p.getY() <= -15.28083399999997) || (p.getX() >= 167.1619260000001 && p.getY() >= -15.26694500000002 && p.getX() <= 167.18109100000004 && p.getY() <= -15.25166699999994) || (p.getX() >= 167.09634400000004 && p.getY() >= -14.972499999999968 && p.getX() <= 167.15441899999996 && p.getY() <= -14.929167000000009) || (p.getX() >= 168.08886700000002 && p.getY() >= -15.39666699999998 && p.getX() <= 168.19329800000003 && p.getY() <= -14.919721999999922) || (p.getX() >= 166.52163700000003 && p.getY() >= -15.663054999999986 && p.getX() <= 167.24206500000003 && p.getY() <= -14.624166000000002) || (p.getX() >= 167.39386 && p.getY() >= -14.326943999999967 && p.getX() <= 167.5985720000001 && p.getY() <= -14.153333999999973) || (p.getX() >= 167.38552900000002 && p.getY() >= -13.951110999999967 && p.getX() <= 167.577759 && p.getY() <= -13.706666999999925) || (p.getX() >= 167.62356600000007 && p.getY() >= -13.697499999999934 && p.getX() <= 167.71664399999997 && p.getY() <= -13.621110999999928) || (p.getX() >= 167.29275500000017 && p.getY() >= -13.5625 && p.getX() <= 167.37106299999994 && p.getY() <= -13.486386999999922) || (p.getX() >= 166.64721700000018 && p.getY() >= -13.454999999999984 && p.getX() <= 166.69802900000002 && p.getY() <= -13.403054999999997) || (p.getX() >= 166.59606900000017 && p.getY() >= -13.381942999999978 && p.getX() <= 166.644135 && p.getY() <= -13.332222000000002) || (p.getX() >= 166.57635500000004 && p.getY() >= -13.274444999999956 && p.getX() <= 166.63943500000002 && p.getY() <= -13.217498999999918) || (p.getX() >= 166.5166630000001 && p.getY() >= -13.188333999999998 && p.getX() <= 166.57189900000012 && p.getY() <= -13.070555000000011)) {
      byte[] data;
      try {
        data = ByteStreams.toByteArray(Antarctica.class.getClassLoader().getResourceAsStream("com/country/Vanuatu.data"));
      } catch (IOException e) {
        throw new RuntimeException(e);
      }
      Geometry geo = Util.convert(data);
      for (int i = 0; i < geo.getNumGeometries(); i++) {
        if (geo.getGeometryN(i).contains(p)) {
          return true;
        }
      }
    }
    return false;
  }
}
