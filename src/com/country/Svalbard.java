package com.country;

import com.google.common.io.ByteStreams;
import com.vividsolutions.jts.geom.Point;
import com.vividsolutions.jts.geom.Geometry;
import com.world.Util;
import java.io.IOException;

public class Svalbard {

  public static boolean test(Point p) {
    if ((p.getX() >= -9.120057999999972 && p.getY() >= 70.80386400000009 && p.getX() <= -7.927002999999957 && p.getY() <= 71.18081700000005) || (p.getX() >= 18.79027600000012 && p.getY() >= 74.34304800000001 && p.getX() <= 19.29999899999996 && p.getY() <= 74.52360500000003) || (p.getX() >= 24.93638200000004 && p.getY() >= 76.43525700000009 && p.getX() <= 25.582218000000008 && p.getY() <= 76.711655) || (p.getX() >= 23.03638500000011 && p.getY() >= 77.23526000000005 && p.getX() <= 23.295551000000103 && p.getY() <= 77.2769320000001) || (p.getX() >= 20.84388700000011 && p.getY() >= 77.25305200000014 && p.getX() <= 24.91027499999996 && p.getY() <= 78.250275) || (p.getX() >= 20.124718000000033 && p.getY() >= 78.18664600000011 && p.getX() <= 22.271941999999967 && p.getY() <= 78.6210939999999) || (p.getX() >= 26.396385000000063 && p.getY() >= 78.623871 && p.getX() <= 27.017498000000103 && p.getY() <= 78.81387300000011) || (p.getX() >= 10.487219000000096 && p.getY() >= 78.19581599999998 && p.getX() <= 12.16610900000012 && p.getY() <= 78.90138200000001) || (p.getX() >= 28.019718000000125 && p.getY() >= 78.81164600000005 && p.getX() <= 29.70805000000007 && p.getY() <= 78.96081500000001) || (p.getX() >= 30.066939999999928 && p.getY() >= 78.96110500000003 && p.getX() <= 30.336109000000025 && p.getY() <= 79.00721699999998) || (p.getX() >= 20.92360700000006 && p.getY() >= 79.01416000000013 && p.getX() <= 21.22610500000013 && p.getY() <= 79.04582200000003) || (p.getX() >= 20.04610800000012 && p.getY() >= 78.99081400000004 && p.getX() <= 20.833053999999947 && p.getY() <= 79.1246950000001) || (p.getX() >= 19.954441000000088 && p.getY() >= 79.22164900000007 && p.getX() <= 20.168884000000048 && p.getY() <= 79.32026700000006) || (p.getX() >= 19.628330000000005 && p.getY() >= 79.3319400000001 && p.getX() <= 20.180274999999995 && p.getY() <= 79.4038700000001) || (p.getX() >= 10.712219000000118 && p.getY() >= 79.65026899999998 && p.getX() <= 11.076108999999974 && p.getY() <= 79.722214) || (p.getX() >= 10.639166000000102 && p.getY() >= 79.72915600000003 && p.getX() <= 11.013611000000026 && p.getY() <= 79.78332500000009) || (p.getX() >= 10.676943000000108 && p.getY() >= 76.56637599999998 && p.getX() <= 21.54916400000008 && p.getY() <= 80.06275900000003) || (p.getX() >= 36.59054600000013 && p.getY() >= 80.1397090000001 && p.getX() <= 36.853324999999984 && p.getY() <= 80.16276600000003) || (p.getX() >= 27.674164000000015 && p.getY() >= 80.1102600000001 && p.getX() <= 28.07444000000009 && p.getY() <= 80.175812) || (p.getX() >= 31.44944000000004 && p.getY() >= 80.06944300000009 && p.getX() <= 33.63749700000005 && p.getY() <= 80.24304200000012) || (p.getX() >= 18.119441999999992 && p.getY() >= 80.23803700000006 && p.getX() <= 18.758609999999976 && p.getY() <= 80.36248800000003) || (p.getX() >= 24.12860900000004 && p.getY() >= 80.38220200000013 && p.getX() <= 24.38333100000005 && p.getY() <= 80.45416300000005) || (p.getX() >= 17.783053999999993 && p.getY() >= 79.17414900000004 && p.getX() <= 27.244995000000127 && p.getY() <= 80.501663) || (p.getX() >= 23.97443800000002 && p.getY() >= 80.46998600000006 && p.getX() <= 24.29277400000001 && p.getY() <= 80.50943000000012) || (p.getX() >= 19.84471900000005 && p.getY() >= 80.47692900000003 && p.getX() <= 20.13027599999998 && p.getY() <= 80.53720100000005) || (p.getX() >= 20.49916099999996 && p.getY() >= 80.61914100000013 && p.getX() <= 20.79333100000008 && p.getY() <= 80.66581699999993) || (p.getX() >= 21.026386000000056 && p.getY() >= 80.64942900000011 && p.getX() <= 21.36499800000007 && p.getY() <= 80.70748900000001) || (p.getX() >= 20.518330000000105 && p.getY() >= 80.67414900000011 && p.getX() <= 21.006664 && p.getY() <= 80.76416000000013)) {
      byte[] data;
      try {
        data = ByteStreams.toByteArray(Antarctica.class.getClassLoader().getResourceAsStream("com/country/Svalbard.data"));
      } catch (IOException e) {
        throw new RuntimeException(e);
      }
      Geometry geo = Util.convert(data);
      for (int i = 0; i < geo.getNumGeometries(); i++) {
        if (geo.getGeometryN(i).contains(p)) {
          return true;
        }
      }
    }
    return false;
  }
}
